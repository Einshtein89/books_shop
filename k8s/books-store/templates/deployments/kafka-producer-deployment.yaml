apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kafkaProducer.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "books-store.labels" . | nindent 4 }}
    app: {{ .Values.kafkaProducer.service.selector }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.kafkaProducer.deployment.replicaCount }}
  {{- end }}
  minReadySeconds: {{ .Values.kafkaProducer.deployment.minReadySeconds }}
  strategy:
    type: {{ .Values.kafkaProducer.deployment.strategy }}
    rollingUpdate:
      maxUnavailable: {{ .Values.kafkaProducer.deployment.maxUnavailable }}
      maxSurge: {{ .Values.kafkaProducer.deployment.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Values.kafkaProducer.deployment.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.kafkaProducer.deployment.name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.kafkaProducer.deployment.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.repository }}/{{ .Values.kafkaProducer.deployment.image.name }}"
          imagePullPolicy: {{ .Values.kafkaProducer.deployment.image.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.kafkaProducer.deployment.containerPort }}
          env:
            - name: KAFKA_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.name }}
                  key: KAFKA_URL
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
